// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.7
// source: model/mnist.proto

package mnistpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageSample struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         int32                  `protobuf:"varint,1,opt,name=label,proto3" json:"label,omitempty"`
	Pixels        []float32              `protobuf:"fixed32,2,rep,packed,name=pixels,proto3" json:"pixels,omitempty"` // 784 values (28x28 grayscale)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageSample) Reset() {
	*x = ImageSample{}
	mi := &file_model_mnist_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSample) ProtoMessage() {}

func (x *ImageSample) ProtoReflect() protoreflect.Message {
	mi := &file_model_mnist_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSample.ProtoReflect.Descriptor instead.
func (*ImageSample) Descriptor() ([]byte, []int) {
	return file_model_mnist_proto_rawDescGZIP(), []int{0}
}

func (x *ImageSample) GetLabel() int32 {
	if x != nil {
		return x.Label
	}
	return 0
}

func (x *ImageSample) GetPixels() []float32 {
	if x != nil {
		return x.Pixels
	}
	return nil
}

type Dataset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Samples       []*ImageSample         `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dataset) Reset() {
	*x = Dataset{}
	mi := &file_model_mnist_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dataset) ProtoMessage() {}

func (x *Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_model_mnist_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dataset.ProtoReflect.Descriptor instead.
func (*Dataset) Descriptor() ([]byte, []int) {
	return file_model_mnist_proto_rawDescGZIP(), []int{1}
}

func (x *Dataset) GetSamples() []*ImageSample {
	if x != nil {
		return x.Samples
	}
	return nil
}

var File_model_mnist_proto protoreflect.FileDescriptor

const file_model_mnist_proto_rawDesc = "" +
	"\n" +
	"\x11model/mnist.proto\";\n" +
	"\vImageSample\x12\x14\n" +
	"\x05label\x18\x01 \x01(\x05R\x05label\x12\x16\n" +
	"\x06pixels\x18\x02 \x03(\x02R\x06pixels\"1\n" +
	"\aDataset\x12&\n" +
	"\asamples\x18\x01 \x03(\v2\f.ImageSampleR\asamplesB\x13Z\x11./backend/mnistpbb\x06proto3"

var (
	file_model_mnist_proto_rawDescOnce sync.Once
	file_model_mnist_proto_rawDescData []byte
)

func file_model_mnist_proto_rawDescGZIP() []byte {
	file_model_mnist_proto_rawDescOnce.Do(func() {
		file_model_mnist_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_model_mnist_proto_rawDesc), len(file_model_mnist_proto_rawDesc)))
	})
	return file_model_mnist_proto_rawDescData
}

var file_model_mnist_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_model_mnist_proto_goTypes = []any{
	(*ImageSample)(nil), // 0: ImageSample
	(*Dataset)(nil),     // 1: Dataset
}
var file_model_mnist_proto_depIdxs = []int32{
	0, // 0: Dataset.samples:type_name -> ImageSample
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_model_mnist_proto_init() }
func file_model_mnist_proto_init() {
	if File_model_mnist_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_model_mnist_proto_rawDesc), len(file_model_mnist_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_mnist_proto_goTypes,
		DependencyIndexes: file_model_mnist_proto_depIdxs,
		MessageInfos:      file_model_mnist_proto_msgTypes,
	}.Build()
	File_model_mnist_proto = out.File
	file_model_mnist_proto_goTypes = nil
	file_model_mnist_proto_depIdxs = nil
}
